{"version":3,"sources":["components/ToolBar.module.css","PixiApp.ts","components/ToolBar.tsx","components/PixiContainer.tsx","components/MainPanel.tsx","components/CheckBox.tsx","components/Button.tsx","components/Range.tsx","components/SidePanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","app","PIXI","antialias","resolution","stage","interactive","engine","Engine","create","world","runner","Runner","spawnBox","x","y","width","height","isStatic","body","Bodies","rectangle","graphics","beginFill","lineStyle","drawRect","endFill","position","set","addChild","Events","on","rotation","angle","World","addBody","start","creatorOptions","static","restitution","event","spawnPoint","data","getLocalPosition","PlayButton","useState","paused","setPaused","togglePaused","useCallback","enabled","onClick","path","mdiPause","mdiPlay","color","size","ToolBar","className","styles","container","PixiContainer","ref","useRef","useEffect","current","childNodes","length","resizeTo","hitArea","screen","appendChild","view","removeChild","style","flex","MainPanel","CheckBox","children","id","onToggle","type","onChange","undefined","htmlFor","Button","disabled","Range","min","max","step","value","onChangeCallback","Number","parseFloat","target","toggleStatic","SidePanel","speed","setSpeed","onSpeedChange","timing","timeScale","boundriesCreated","setBoundriesCreated","createBoundries","thickness","setRestitution","onRestitutionChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9afc0f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToolBar_container__1h9lV\"};","import { Bodies, Engine, Events, Runner, World } from 'matter-js';\nimport * as PIXI from 'pixi.js';\n\nexport const app = new PIXI.Application({\n    antialias: true,\n    resolution: 1\n});\nexport const stage = app.stage;\nstage.interactive = true;\n\nexport const engine = Engine.create();\nexport const world = engine.world;\nexport const runner = Runner.create();\nRunner.start(runner, engine);\n\n/**\n * Spawns a rectangular box at a specific location.\n * @param x The X coords of the box's center.\n * @param y The Y coords of the box's center.\n * @param width The width of the box.\n * @param height The height of the box.\n * @param isStatic Whether the box will be static or not.\n */\nexport function spawnBox(x: number, y: number, width: number, height: number, isStatic: boolean = false): Matter.Body {\n    const body = Bodies.rectangle(x, y, width, height, { isStatic });\n\n    const graphics = new PIXI.Graphics();\n\n    graphics.beginFill(0, 0);\n    graphics.lineStyle(3, isStatic ? 0xFCBF18 : 0xFFFFFF);\n    graphics.drawRect(- width / 2, - height / 2, width, height);\n    graphics.endFill();\n\n    graphics.position.set(x, y);\n\n    stage.addChild(graphics);\n\n    if (!isStatic) {\n        Events.on(engine, \"afterUpdate\", () => {\n            graphics.position.set(body.position.x, body.position.y);\n            graphics.rotation = body.angle;\n        });\n    }\n\n    World.addBody(world, body);\n\n    return body;\n}\n\nexport const creatorOptions = {\n    static: false,\n    restitution: 0\n}\n\nstage.on('pointerdown', (event: PIXI.InteractionEvent) => {\n    const spawnPoint = event.data.getLocalPosition(stage);\n    const box = spawnBox(spawnPoint.x, spawnPoint.y, 50, 50, creatorOptions.static);\n    box.restitution = creatorOptions.restitution;\n});","import styles from './ToolBar.module.css';\nimport Icon from '@mdi/react';\nimport { mdiPlay, mdiPause } from '@mdi/js';\nimport { useCallback, useState } from 'react';\nimport { runner } from '../PixiApp';\n\nexport function PlayButton() {\n    const [paused, setPaused] = useState(false);\n    const togglePaused = useCallback(() => setPaused(!paused), [paused]);\n\n    runner.enabled = !paused;\n\n    return (<button onClick={togglePaused}>\n        <Icon path={paused ? mdiPause : mdiPlay} color={paused ? '#fcbf18' : '#2bf12b'} size='25px' />\n    </button>);\n}\n\nexport default function ToolBar() {\n    return (<div className={styles.container}>\n        <PlayButton />\n    </div>);\n}","import { app } from '../PixiApp';\nimport { useEffect, useRef } from 'react';\n\nexport default function PixiContainer() {\n\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const container = ref.current;\n        if (container === null || container.childNodes.length !== 0) return;\n\n        app.resizeTo = container;\n        app.stage.hitArea = app.screen;\n        container.appendChild(app.view);\n\n        return () => { container.removeChild(app.view) };\n    }, [ref]);\n\n    return <div ref={ref} style={{ width: '100%', flex: 1 }} />;\n}","import ToolBar from './ToolBar';\nimport PixiContainer from './PixiContainer';\n\nexport default function MainPanel() {\n    return (<div className=\"main-panel\">\n        <ToolBar />\n        <PixiContainer />\n    </div>);\n}","type CheckBoxProps = {\n    /**\n     * The HTML id for the checkbox.\n     */\n    id: string,\n\n    /**\n     * A method to call when the checkbox is toggled.\n     */\n    onToggle?: () => void,\n\n    /**\n     * Anything to display as the checkbox's label.\n     */\n    children?: React.ReactNode\n}\n\nexport default function CheckBox({ children, id, onToggle }: CheckBoxProps) {\n    return (<div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" id={id} onChange={onToggle} />\n        {children !== undefined && <label className=\"form-check-label\" htmlFor={id}>\n            {children}\n        </label>}\n    </div>);\n}","\ntype ButtonProps = {\n    disabled?: boolean,\n    onClick?: () => void,\n    children?: React.ReactNode\n}\n\nexport default function Button({ children, disabled, onClick }: ButtonProps) {\n    return <button className=\"btn btn-primary\" style={{ width: '100%' }} onClick={onClick} disabled={disabled}>{children}</button>\n}","import { useCallback } from \"react\";\n\ntype RangeProps = {\n    /**\n     * The HTML id for the element.\n     */\n    id: string,\n    /**\n     * The minimum value of the range.\n     */\n    min?: number,\n    /**\n     * The maximum value of the range.\n     */\n    max?: number,\n    /**\n     * The range steps.\n     */\n    step?: number,\n    /**\n     * The current value of the range.\n     */\n    value?: number,\n    /**\n     * Called when the range's value is changed, with the new value passed as the first parameter.\n     */\n    onChange?: (value: number) => void,\n    /**\n     * Any children to display as the range's label.\n     */\n    children?: React.ReactNode\n};\n\n/**\n * A range (slider) input element.\n * @param param0 The range's props.\n */\nexport default function Range({children, id, min, max, step, value, onChange}: RangeProps) {\n    const onChangeCallback = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange !== undefined) onChange(Number.parseFloat(event.target.value));\n    }, [onChange]);\n\n    return (<>\n        {children !== undefined && <label className=\"form-label\" htmlFor={id}>{children}</label>}\n        <input type=\"range\" className=\"form-range\" value={value} min={min} max={max} step={step} id={id} onChange={onChange && onChangeCallback} />\n    </>);\n}","import { useCallback, useState } from 'react';\nimport { creatorOptions, app, engine, spawnBox } from '../PixiApp';\nimport CheckBox from './CheckBox';\nimport Button from './Button';\nimport Range from './Range';\n\nfunction toggleStatic() {\n    creatorOptions.static = !creatorOptions.static;\n}\n\nexport default function SidePanel() {\n    const [speed, setSpeed] = useState(1);\n    const onSpeedChange = useCallback((value) => {\n        setSpeed(value);\n        engine.timing.timeScale = value;\n    }, [setSpeed]);\n\n    const [boundriesCreated, setBoundriesCreated] = useState(false);\n    const createBoundries = useCallback(() => {\n        const thickness = 5;\n        const { width, height } = app.screen;\n\n        spawnBox(width / 2, thickness, width, thickness * 2, true);\n        spawnBox(width / 2, height - thickness, width, thickness * 2, true);\n\n        spawnBox(thickness, height / 2, thickness * 2, height, true);\n        spawnBox(width - thickness, height / 2, thickness * 2, height, true)\n\n        setBoundriesCreated(true);\n    }, [setBoundriesCreated]);\n\n    const [restitution, setRestitution] = useState(0);\n    const onRestitutionChange = useCallback((value) => {\n        creatorOptions.restitution = value;\n        setRestitution(value);\n    }, [setRestitution]);\n\n    return (<div className=\"side-panel\">\n        <CheckBox id=\"spawnStatic\" onToggle={toggleStatic}>Make object static</CheckBox>\n        <Range id=\"simulationSpeed\" value={speed} min={0.01} max={1} step={0.01} onChange={onSpeedChange}>Simulation Speed ({speed})</Range>\n        <Range id=\"restitutionRange\" value={restitution} min={0} max={2} step={0.05} onChange={onRestitutionChange}>Objects Restitution ({restitution})</Range>\n        <Button disabled={boundriesCreated} onClick={createBoundries}>Create boundries</Button>\n    </div>);\n}","import './App.css';\n\nimport MainPanel from './components/MainPanel';\nimport SidePanel from './components/SidePanel';\n\nfunction App() {\n\treturn (<>\n\t\t<MainPanel />\n\t\t<SidePanel />\n\t</>);\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}